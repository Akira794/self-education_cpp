1.オブジェクトを他のオブジェクトに代入したときに、何が起こるか正確に説明

→　1つのオブジェクトを同じ型の別のオブジェクトに代入すると右辺のオブジェクトの全てのデータメンバの
現在値が左辺のオブジェクトの対応するデータメンバに代入される



2.オブジェクトを他のオブジェクトに代入したときに発生する問題や副作用について例をあげて説明

→　1つのオブジェクトを別のオブジェクトに代入すると、それによって左辺のオブジェクト内にある既存の
重要なデータが上書きされ、問題が発生することがあります。
例えば、動的メモリや開いているファイルを指すポインタが上書きされて失われる可能性があります。



3.関数に引数としてオブジェクトを渡すとそのオブジェクトのコピーが作成される
コピーのオブジェクトに対してコンストラクタとデストラクタは呼び出されるかどうか説明

→　関数にオブジェクトを渡すとオブジェクトのコピーが作成される
ただし、コピーオブジェクトのコンストラクタ関数は呼び出されません
関数の終了時にオブジェクトを破棄する際にはコピーオブジェクトのデストラクタが呼び出されます。



4.デフォルトでは関数はオブジェクトに値呼び出しによって渡される
つまり、関数内でコピーに対して行った処理は呼び出し時に使用したオブジェクトには影響しません
この原則に対する例外があれば例をあげて説明

→　オブジェクトを借引数として渡す際、引数に指定したオブジェクトとそのコピーとの区別が失われる状況は
何通りかある。
例えば、デストラクタによって動的メモリを解放した場合、引数に指定したオブジェクトのメモリも解放される
一般に引数に指定した元のオブジェクトで必要とされるデータがデストラクタ関数によって破壊されると
元のオブジェクトに被害が及ぶ。

